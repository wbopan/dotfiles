# Install:
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
# prefix + I to install plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'noscript/tmux-mighty-scroll'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'niksingh710/minimal-tmux-status'

set -g status-interval 1
set -s escape-time 10                       # faster command sequences

set -g prefix2 C-a                        # GNU-Screen compatible prefix
bind C-a send-prefix -2

setw -g automatic-rename on   # rename window to reflect current program
set -g allow-rename on       # allow programs to change window name
setw -g automatic-rename-format '#T'

set -g renumber-windows off   # renumber windows when a window is closed

set -g set-titles on          # set terminal title
set -g set-titles-string "#T"


set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time


set -g monitor-activity on
set -g visual-activity off

set -g mouse on               # Always enable mouse mode
set -g aggressive-resize off  # Disable aggressive-resize for iTerm2 compatibility

bind C-c new-session


set-window-option -g mode-keys vi
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

bind + run "cut -c3- '#{TMUX_CONF}' | sh -s _maximize_pane '#{session_name}' '#D'"

bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2


bind F run "cut -c3- '#{TMUX_CONF}' | sh -s _fpp '#{pane_id}' '#{pane_current_path}'"

# Enable xterm-keys for proper F-key support
set -g xterm-keys on

# F-Key Bindings (Byobu-style)
# Note: -n flag means no prefix key needed for these bindings
# Warning: These may conflict with applications that use F-keys (vim, mc, etc.)
# Use Shift-F12 to toggle F-keys off when needed

# Help
bind-key -n F1 list-keys                     # Show all key bindings (help)

# Window management
bind-key -n F2 new-window                    # Create new window
bind-key -n F3 previous-window               # Move to previous window
bind-key -n F4 next-window                   # Move to next window
bind-key -n F8 command-prompt -I "#W" "rename-window '%%'"  # Rename current window

# Pane management
bind-key -n S-F2 split-window -h             # Split window horizontally (Shift-F2)
bind-key -n C-F2 split-window -v             # Split window vertically (Ctrl-F2)
bind-key -n S-F3 select-pane -t :.+          # Move to next pane (Shift-F3)
bind-key -n S-F4 select-pane -t :.-          # Move to previous pane (Shift-F4)
bind-key -n C-F6 kill-pane                   # Kill current pane (Ctrl-F6)

# Session management
bind-key -n C-S-F2 new-session               # Create new session (Ctrl-Shift-F2)
bind-key -n F6 detach-client                 # Detach from session
bind-key -n F9 choose-tree -Zs               # Choose session/window menu

# Utility functions
bind-key -n F5 source-file ~/.tmux.conf \; display "Configuration reloaded!"  # Reload tmux config
bind-key -n F7 copy-mode                     # Enter copy mode

# F-key toggle (escape hatch)
# Shift-F12: Toggle F-keys on/off for applications that need them
# When OFF, F-keys are passed through to the application
bind-key -n S-F12 \
  if -F '#{s/off//:status}' \
    'set -g status off; set -g key-table off; display-message "F-keys OFF - Press Shift-F12 to restore"' \
    'set -g status on; set -g key-table root; display-message "F-keys ON"'

# Alternative keytable for when F-keys are disabled
bind-key -Toff S-F12 \
  set -g status on \; \
  set -g key-table root \; \
  display-message "F-keys ON"

## Copy mode enhance

unbind -T copy-mode-vi MouseDragEnd1Pane # don't exit copy mode when dragging with mouse
bind-key -T copy-mode-vi 'v' send -X begin-selection # start selecting text with "v"

##### --- ENTER INNER TEXT OBJECT MODE (v + i + motion) --- #####
# Changed from y + i to v + i for vim-like visual selection
bind -T copy-mode-vi v switch-client -T copyModeVisualKey
bind -T copyModeVisualKey i switch-client -T copyModeVisualKey_i

bind -T copyModeVisualKey_i w \
  send-keys -X select-word \;

bind -T copyModeVisualKey_i W \
  send-keys -X clear-selection \; \
  send-keys -X previous-space \; \
  send-keys -X begin-selection \; \
  send-keys -X next-space-end \;

bind -T copyModeVisualKey_i b \
  send-keys -X jump-to-backward '(' \; \
  send-keys -X begin-selection \; \
  send-keys -X jump-to-forward ')' \;

bind -T copyModeVisualKey_i B \
  send-keys -X jump-to-backward '{' \; \
  send-keys -X begin-selection \; \
  send-keys -X jump-to-forward '}' \;

bind -T copyModeVisualKey_i [ \
  send-keys -X jump-to-backward '[' \; \
  send-keys -X begin-selection \; \
  send-keys -X jump-to-forward ']' \;

bind -T copyModeVisualKey_i \' \
  send-keys -X jump-to-backward "'" \; \
  send-keys -X begin-selection \; \
  send-keys -X jump-to-forward "'" \;

bind -T copyModeVisualKey_i \" \
  send-keys -X jump-to-backward '"' \; \
  send-keys -X begin-selection \; \
  send-keys -X jump-to-forward '"' \;

bind -T copyModeVisualKey_i ` \
  send-keys -X jump-to-backward '`' \; \
  send-keys -X begin-selection \; \
  send-keys -X jump-to-forward '`' \;

bind -T copyModeVisualKey_i < \
  send-keys -X jump-to-backward '<' \; \
  send-keys -X begin-selection \; \
  send-keys -X jump-to-forward '>' \;

bind -T copyModeVisualKey_i > \
  send-keys -X jump-to-backward '<' \; \
  send-keys -X begin-selection \; \
  send-keys -X jump-to-forward '>' \;

run '~/.tmux/plugins/tpm/tpm'
